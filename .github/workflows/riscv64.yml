# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go
name: Build RISC-V ollama
on:
  push:
    branches: [ "feature/riscv64-cpu-only" ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'
    - name: Set Version
      shell: bash
      run: echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV
    # - name: generate
    #   run: |
    #     export GOARCH=riscv64
    #     go generate ./...
    # - name: Build
    #   run: |
    #     export GOARCH=riscv64 
    #     go build -v .
    - name: Build
      run: |
        docker build -t builder-riscv64 -f Dockerfile-build .
        docker create --name builder-riscv64-container builder-riscv64
        docker cp builder-riscv64-container:/opt/build/ollama ./ollama
        docker rm builder-riscv64-container

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ollama-riscv64
        path: ollama